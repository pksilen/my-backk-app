version: "3.8"

services:
  wait-for-services-ready:
    image: dokku/wait
  microservice:
    container_name: ${MICROSERVICE_NAME}
    restart: always
    build:
      context: .
      cache_from:
        - ${DOCKER_REPOSITORY}:latest
    env_file: .env.ci
    ports:
      - "${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}"
    depends_on:
      - mysql
      - kafka
  mysql:
    container_name: mysql
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "13306:3306"
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.7
    volumes:
      - "zookeeper_data:/bitnami"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: bitnami/kafka:2.8.1
    volumes:
      - "kafka_data:/bitnami"
    ports:
      - "19092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
#  postgresql:
#    container_name: postgresql
#    image: postgres:14.1
#    restart: always
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
#    ports:
#      - "15432:5432"
#  mongodb:
#    container_name: mongodb
#    image: mongo:5.0.5
#    restart: always
#    ports:
#      - "37017:27017"
#  mysql:
#    container_name: mariadb
#    image: mariadb: 10.7.1
#    restart: always
#    cap_add:
#      - SYS_NICE
#    environment:
#       MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
#    ports:
#      - "13306:3306"
#  redis:
#    container_name: redis
#    image: redis:6.2.6
#    restart: always
#    ports:
#      - "16379:6379"
#  redis-cache:
#    container_name: redis-cache
#    image: redis:6.2.6
#    restart: always
#    ports:
#      - "26379:6379"

#  DEPENDENT BACKK MICROSERVICES should be named: <microservice-name>-<microservice-kubernetes-namespace>
#  other-microservice-1-default:
#    container_name: other-microservice-1-default
#    image: other-microservice-1
#    env_file: .env.ci
#    restart: always
#    ports:
#      - "18080:8080"
#  other-microservice-2-default:
#    container_name: other-microservice-2-default
#    image: other-microservice-2
#    env_file: .env.ci
#    restart: always
#    ports:
#      - "18081:8080"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
